var courses = {"CSL665": "Introduction to declarative programming paradigms. The functional style of programming, paradigms of developments of functional programs, use of higher order functions and pattern-matching. Type, type-checking and their relationship to logic. Logic as a system for declarative programming. The use of pattern-matching and programming of higher order fucntions within a logic programming framework. Introduction to symbolic processing. The use of resolution and theorem-proving techniques in logic programming, The relationship between logic programming and functional programming laboratory exercises will focus on the following: unification, resolution, theorem proving and pattern matching and type inferencing.", "CSD310": "Design/fabrication/implementation work under the guidance of a faculty member. Prior to registration a detailed plan of work should be submitted by the student to the head of the department for approval.", "CSL705": "Regular Languages, Finite Automata, equivalence, minimization, Myhill-Nerode Theorem, introduction to nondeterminism, Context free grammars, Pushdown automata, equivalence and applications. Turing machines, Recursive and Recursively enumerable sets, non-determinism, RAMs and equivalence, Universal Turing Machines, undecidability, Rice's theorems for RE sets, Post machines, Basics of Recursive function theory. Equivalence, Church's thesis, computational complexity, space and time complexity of Turing Machines, Relationships, Savage's theorem, Complexity classes, Complete problems, NP-completeness, Cook-Levin theorem.", "CSD745": "Research and development projects based on problems of practical and theoretical interest. Evaluation will be based on periodic presentations, student seminars, written reports and evaluation of the developed system (if applicable).", "CST410": "Expose the students to the actual industrial environment. Fifty (50) working days or 400 hours of practical training in an industry/research laboratory.", "CSL771": "Relational Algebra, Database Language SQL and System Aspects of SQL. Constraints and triggers, Disk Storage, Disk and Memory Organization for Relational Operators, Respresenting Data Elements, Index Structures, Query execution, Query Compilation, Query Optimization, Coping with System Failures, Concurrency Control, Transaction Management, Representation of Data.", "CSP601": "A set of four project oriented assignments which will be announced at the start of each semester with definite submission deadlines. The set of assignments will be designed to develop skills and familarity with a majority of the following: make, configuration management tools, installation of software, archiving and creation of libraries, version control systems, documentation and literate programming systems (noweb and LaTeX), lex, yacc, perl and other scripting languages, sockets and RPCs, usage of standard libraries like pthreads, numerical packages, XML and semi-structured data, simulation environments, testing and validation tools.", "CSP315": "This course is a project oriented course where a group of students (normally 3 to 5) would be required to work on an innovative embedded system design project. Though the emphasis would be on implementation, they would be required to go through all aspects of system design including drawing up proper specifications as well as evaluation of alternatives. The tutorial hour would be utilized both for preliminary introduction to embedded components by the instructors as well as regular presentation by each group for sharing with other groups.", "CSL316": "Combinational circuit design using MSI/LSI and programmable logic modules; Iterative and tree networks; Sequential circuit design and implementation; Algorithmic state machine design; Asynchoronous and pulse mode circuit design; Hardware description language and synthesis; Microprogrammed control design; Testing of digital systems; Introduction to hardware-software codesign.", "CSL672": "Networks goals, applications, classifications, layered architecture. Open system interconnection model. Statistical multiplexing; Point to point and broadcast communication; multi access protocols; Aloha, CSMA and its variations, Token Ring; Error control techniques; Flow control; Data link layer protocoals; Bridges, Repeaters switches and the spanning tree protocol, Networ; routing Congestion control, Internet protocols; Multicast Routing and realible Multicast, Mobile IP, Laboratory exercises will focus on the students ability to use this protocols in practical systems.", "CSL671": "Problem solving, search techniques, control strategies, game playing (minimax), reasoning, knowledge representation through predicate logic rule based systems, semantics nets, frames, conceptual dependency, Planning, Handling uncertainty: Bayesian Networks, Dempster-Shafer theory, Fuzzy logic, Learning through Neural nets-Back propagation, radial basis functions, Neural Computational models - Hopfield Nets, Boltzman machines, PROLOG programming Expert Systems.", "CSV888": "Special module that focuses on special topics and research problems of importance in this area.", "CSV889": "Special module that focuses on special topics and research problems of importance in this area.", "CSV886": "Special module that focuses on special topics and research problems of importance in this area.", "CSV887": "Special Module that focuses on special topics and research problems of importance in this area.", "CSV884": "Special module that focuses on special topics and research probllems of importance in this area.", "CSV885": "Special module that focuses on special topics and research problems of importance in this area.", "CSV882": "Special module that focuses on special topics and research problems of importance in this area.", "CSL373": "Overview: functions of Operating Systems, layered architecture basic concepts; interrupt architecture, system calls and notion of process and threads; synchronization and protection issues; scheduling; memory management including virtual memory and paging techniques; input-output arhitecture and device management; file systems; distributed file systems. Case studies of Unix, Windows NT, Design and implementation of small operating systems.", "CSV880": "Special module that focuses on special topics and research problems of importance in this area.", "CSV881": "Special module that focuses on special topics and research problems of importance in this area.", "CSP301": "Basic design methodology - introduction to the steps involved, Familiarization with software practices, tools and techniques, Software project involving conceptualization, design, analysis, implementation and testing using the tools and techniques learnt.", "CSL847": "Models of synchronous and asynchronous distributed computing systems; synchronous networks, asynchronous shared memory, asynchronous networks etc; basic algorithms for synchronous and asynchronous networks; leader election, breadth first search, shortest path, minimum spanning tree etc.; advanced synchronous algorithms; distributed consensus with failures, commit protocols; asynchronous shared memory algorithms; mutual exclusion and consensus; relationship between shared memory and network models; asynchronous networks with failures.", "CSL840": "Camera models, Calibration, multi-views projective geometry and invariants. Edge/feature extraction, correspondence and tracking, 3D structure/motion estimation. Object recognition, Scene and activity interpretation.", "CSL783": "Digital Image Fundamentals; Image Enhancement in Spatial Domain; Gray Level Transformation, Histogram Processing, Spatial Filters; Image Transforms; Fourier Transform and their properties, Fast Fourier Transform, Other Transforms; Image Enhancment in Frequency Domain; Colour Image Processing; Image warping and restoration; Image Compression; Image Segmentation; edge detection, Hough transform, region based segmentation; Morphological operators; Representation and Description; Features based matching and Bayes classification; Introduction to some computer vision techniques; Imaging geomerty, shape from shading, optical flow; Laboratory exercises will emphasize development and evaluation of image processing methods.", "CSL781": "Graphics pipeline; Graphics hardware: Display devices, input devices; Raster Graphics; line and circle drawing algorithms; Windowing and 2D/3D clipping. Cohen and Sutherland line clipping, Cyrus Beck clipping method; 2D and 3D Geometrical Transformations: scaling, translation, rotation, reflection; Viewing Transformations: parallel and perspective projection; Curves and Surfaces: cubic splines, Bezier curves, B-splines, Parametric surfaces. Surface of revolution Sweep surfaces, Fractal curves and surfaces; Hidden line/surface removal methods; illuminations model; shading: Gouraud, Phong; Introduction to Ray-tracing; Animation; Programming practices with standard graphics libraries like openGL.", "CSL303": "Review of the principle of mathematical induction; the principle of structural induction; review of Boolean algebras; Syntax of propositional formulas; Truth and the semantics of propositional logic; Notions of satisfiability, validity, inconsistency; Deduction systems for propositional logic; Completeness of deduction sytems; First order logic (FOL) ; Proof theory for FOL; introduction to model theory; completeness and compactness theorems; First order theories. Programming exercises will include representation and evalution; conversion to normal-forms; tautology checking; proof normalization; resolution; unification; Skolemization, conversion to Horn-clauses; binary-decision diagrams.", "CSL302": "Notions of syntax and semantics of programming languages; introduction to operational/natural semantics of functional and imperative languages. Data abstractions and control constructs; block-structure and scope, principles of abstraction, qualification and correspondence; parameter passing mechanisms; runtime structure and operating environment; practical and implementation issues in run-time systems and environment; abstract machines; features of functional and imperative langagues; the untyped and simply-typed Lambda calculus, type systems for programming languages including simple types and polymorphism; objects; classes and inheritance in object-oriented languages.", "CSL361": "Introduction to Scientific Computing. Review of matrices and linear systems, Linear Least Squares, Eigenvalue Problems. Nonlinear Equations. Optimization, interpolation, Numerical integration and Differentiation, Initial and Boundary Value Problems for Ordinary Differential Equations. Partial Differential Equations, Fast Fourier Transform. Throughout the course implementation of the various methods and their comparisons with professionally written software such as LINPACK,ITPACK, EISPACK,LAPACK, SPARSE PACK will be emphasized with the understanding of various data structures, storage schemes etc. Existence and uniqueness, sensitivity and condition, convergence and error analysis will be part of every topic.", "CSL362": "Fundamentals of modelling, Classification of simulation models; The simulation process; System investigation, model formulation, validation and translation; Time flow mechnisams; Design of computer simulation experiments; Simulation of complex discrete-event systems with applications in industrial and service organizations. Tactical planning and managment aspects, Random variable generation and analysis.", "CSL859": "Rendering: Ray tracing, Radiosity methods, Global illumination models, Shadow generation, Mapping, Anti-aliasing, Volume rendering, Geometrical Modelling: Parametric Surfaces, Implicit Surfaces, Meshes, Animation: Spline driven, quarternions, articulated structures (forward and inverse kinematics), deformation - purely geometric, physically-based. Other advanced topics selected from research papers.", "CSL858": "Flow and Congestion Control; Window and Rate Based Schemes, Decbit, TCP. ATM, ABR, hop-by-hop chemes, Quality of Service: in ATM, IETF integrated services model, Differentiated Services Model. Flow identification, Packet Classifiers and Filters. Scheduling. Network Management: ASN, SNMP, CMIP. Issues in the mannnagement of large networks. Multicast: IGMP, PIM, DVMRP, Mobility: Mobile IP.", "CSL853": "Turing machines and non-determinism, models of computation like RAM and pointer machines. Relations between complexity classes. Time-space tradeoffs for some fundamental problems. Reductions and completeness, Randomized complexity classes, Boolean circuit complexity. Cryptography and one-way functions. Polynomial hierarchy, P-space completeness, Interactive proofs and Hardness of approximation, Parallel complexity classes.", "CSL852": "Visibility problems and triangulation, Line sweep and angle sweep; segment intersection, area, perimeter, diameter, width. Planar Point location; Kirkpatrick's hierarchy, Persistent data structure, Multidimiensional data structures: Segment trees, range trees, orthogonal range searching, Convex hulls and Voronoi diagrams; 2d, 3d hulls, 2d Voronoi diagrams, dynamic maintenance, Duality between hulls and Voronoi diagrams, Duality between lines and points, higher order Voronoi diagrams Arrangements: Construction and bounds, k-sets Zone theorem, Algebraic lower bounds; Linear Decision model, Ben-Or's theorem, Randomized algorithms: Random sampling, Incremental construction, Backward analysis Optimization: Monge matrices, Fixed dimensional linear programming, Prune and Search Parametric search; k-th intersection, k-th nearest neighbour. Recent topics: Instructor's choice.", "CSL851": "Introduction to graphs, Max-flow Min-cut theorem, Algorithms for computing maximum s-t flows in graphs. Algorithms for computing the minimum cut in a graph, Edge and vertex connectivity of graphs and Menger's theorem. Maximum matching, Hall's theorem, algorithms for computing maximum matching in weighted and unweighted graphs. Arborescences and algorithm for computing minimum arborescence, Edmonds therorem for disjoint arborescences. Planar graphs and algorithms for checking for planarity. Edge and vertex colouring of graphs. Independent sets and perfect graphs, Extremal graph theory.", "CSL856": "Linear Algebra and Complexity. Theory of Lattices and Linear Diophantine Equations. Algorithms for Linear Diophantine Equations, Diophantine Approximation and Basis Reduction. Fundamental Concepts and Results on Polyhedra, Linear Inequalities, Linear Programming. The Structure of Polyhedra. Polarity, and Blocking and Anti-Blocking polyhdra. Sizes and the theoretical Complexity of Linear Inequalities and Linear Programming. The Simplex Mathod, Primal-Dual, Elimination and Relaxation Methods. The Ellipsoid Method for Polyhdra more generally. Karmarkar's method for linear programming, Introduction to integer linear programming. Estimates in integer linear programming, The Complexity of Integer Linear Programming. Totally Unimodular Matrices; Fundamental Properties and Examples. Integral Polyhedra and Total Dual Integrality. Cutting Planes. Further Methods in Integer Linear Programming.", "CSL855": "Computing and the notion of a effective procedure. RAM model, Primiitive and partial recursive functions, Lambda calculus and combinatory logi, Logic - completeness and incompleteness, Decidability and Chruch-Turing hypothesis, Limitations of the standard model, Coding and information theory. Thermodynamics of computation, Quantum computation and quantum algorithms, Physical aspects of computation.", "CSL854": "NP-hardness and approximation algorithms. Different kinds of approximability. Linear programming and Duality. Randomized Rounding. Covering and packing problems, Facility location, machine scheduling and bin packing, Primal dual approximation algorithms in graph connectivity and Networks design. Multi-commodity flows and cuts. Graph embeddings and their application to sparsest cuts, separators and bandwidth minimization. Feedback arc sets and linear ordering problems, Shop scheduling: Open, flow and job shop. Semi definite programming and application to max-cut graph colouring. Concept of best possbile approximation algorithm, Hardness of approximations.", "CSR310": "The course would consist of talks by working professionals from industry, government and research organizations. It may also include site visits to various organizations.", "CSL750": "Review of first-order logic, syntax and semantics, Resolution theorem proving. Binary Decision Diagrams (BDDs) and their use in representing systems. (Programming exercises coding and using logic programming frameworks). Transition systems, automata and transducers. Buechi and other automata on infinite words; Linear Time Temporal Logic (LTL), and specifying properties of systems in LTL; the relationship between temporal logic and automata on infinte words, LTL Model checking (excercises using Spin or similar tools); Computational Tree Logic (CTL and CTL*); CTL model checking (excercises); Process calculi such as CSP and CCS; Notions of program equivalence - traces, bisimulation and other notions. Hennessy-Milner Logic (HML) and Mu calculus (excercises using tools such as Concurrency Work Bench), Symbolic model checking (exercises using tools such as SMV). Sat-based model checking and Davis-Putnam procedures; (exercises using tools such as nuSMV). Possible additional topics include; equational logic frameworks, realtime frameworks, reactive frameworks, pi-calculus (exercises using tools such as the Mobility Workbench), Tree automata and Weak Second-order Logic with k successors (WSkS), (exercises using Mona or simlar tools).", "CSL101": "Concept of an algorithm; termination and correctness. Algorithms to programs: specification, top-down development and stepwise refinement. Use of high level programming language for the systematic development of programs. Introduction to the design and implementation of correct, efficient and maintainable programs. Introduction to computer architecture; memory, ALU, CPU, I/O devices. Introduction to system software; operating systems, compilers and multi-user environments.", "CSL105": "Fundamental structures; Functions (surjections, injections, inverses, composition); relations (reflexivity, symmetry, transitivity, equivalence relations); sets (Venn diagrams, complements, Cartesian products, power sets); pigeonhole principle; cardinality and countability. Basic logic: Propositional logic: logical connectives; truth tables; normal forms (conjunctive and disjunctive); validity; predicate logic; limitations of predicate logic, universal and existential quantification; modus ponens and modus tollens. Proof techniques: Notions of implication, converse, inverse, contrapositive, negation, and contradiction; the structure of formal proofs; direct proofs; proof by counter example; proof by contraposition; proof by contradiction; mathematical induction; strong induction; recursive mathematical definitions; well orderings. Basics of counting: Counting arguments; pigeonhole principle; permutations and combinations; inclusion-exclusion, recurrence relations, generating functions.", "CSL102": "Design of algorithm; iterative versus recursive style; problem solving using a functional style; correctness issues in programming; efficiency issues in programming; time and space measures; imperative style of programming; Assertions and loop invariants; programming in an imperative language using advanced features: procedures functions, list handling using references; file handling; objects and classes.", "CSL758": "Advanced data structures: self-adjustment, persistence and multi-dimensional trees. Randomized algoarithms: Use of probabilistic inequalities in analysis, Geometric algorithms; Point location, Convex hulls and Voronoi diagrams. Arrangements applications using examples, Graph algorithms; Matching and Flows. Approximation algorithms; Use of Linear programming and primal dual, local search heuristics. Parallel algorithms; Basic techniques for sorting, searching merging, list ranking in PRAMs, and interconnection networks.", "CSL356": "RAM model and complexity; O(log n) bit model, integer sorting and string sorting. Review of fundamental data structures; Red-black trees, mergeable heaps, interval trees. Fundamental design methodologies and their implementations; Search Techniques, Dynamic Programming, Greedy algorithms, Divide-and-Conquer, Randomised techniques. Algorithms for set manipulations, their implementations and applications; Union-Find Randomized data structures; Skip lists, Universal Hash functions, Graph Algorithms with implementation issues; Depth-First Search and its applications, minimum Spanning Trees and Shortest Paths. Convex hulls, sorting, Selection Matrix multiplication, pattern matching, integer and polynomial arithmetic, FFT, introduction to the theory of lower bounds, NP-Completeness and Reductions. Approximation algorithms.", "CSD895": "", "CSD894": "Second part of the two semester project. The primary objective is to meet the milestones defined in the first part. Evaluation will be held periodically, and will be based on written reports, oral presentations and demonstration of results. The project will culminate in the production of a thesis by each individual student. Final evaluation will be according to the M.Tech., project evaluation guidelines.", "CSD893": "Research and development projects based on problems of practical and theoretical interest. First part of a two semester long project activity. Problem definition, background research, development of overall project plan (detailed design, milestones, etc.) and meeting the research and development targets set up for the first part. Evaluation will be based on student seminars, written reports, and evaluation of the developed system and/or theories.", "CSD412": "The students who work on a project are expected to work towards the goals and milestones set inCSD411. At the end there would be a demonstration of the solution and possible future work on the same problem. A dissertation outlining the entire problem, including a survey of literature and the various results obtained along with their solutions is expected to be produced.", "CSD411": "This project spans also the course", "CSL821": "FPGA architectures, CAD for FPGSa: overview, LUT mapping, timing analysis, placement and routing. Reconfigurable devices - from fine-grained to coarse-grained devices, Reconfiguration modes and multi-context devices, Dynamic reconfiguration, Compilation from high level languages, System level design for reconfigurable systems; heuristic temporal partitioning and ILP-based temporal partitioning. Behavioural synthesis, Reconfigurable example systems' tool chains.", "CSL201": "Introduction to object-oriented programming through stacks queues and linked lists. Dictionaries; skip-lists, hashing, analysis of collision resolution techniques. Trees, traversals, binary search trees. Balanced BST, Trees, Priority queues and binary heaps. Object oriented implementation and building libraries. Applications to discrete event Simulation. Sorting: merge, quick, radix, selection and heap sort, Graphs: Breadth first search and connected components. Depth first search in directed and undirected graphs. Union-find data structure and applications. Directed acyclic graphs; topological sort.", "CSL740": "Concepts and techniques relevant to production of large software systems: Structured programming, Requirements specification and analysis . Top-down design and development, Information hiding, abstraction, modularity, object-oriented techniques. Separate compilation, configuration management, program libraries Design patterns, UML Documentation, validation, Quality assurance, safety, Testing and test case generation, Software metrics, Cost analysis and estimation, manpower and time management. Organization and management of large software design projects.", "CSS310": "Research oriented activites or study of subjects outside regular course offerings under the guidance of a faculty member; Prior to registration, a detailed plan of work should be submitted by the student to the Head of the Department for approval.", "CSL831": "Study of operational, axiomatic and denotational semantics of procedural languges; semantic issues in the design of functional and logic programming languages, study of abstract data types.", "CSL830": "Models of distributed computing; Basic issues; Causality, Exclusion, Fairness, independence, Consistency; Specification of DIstributted Systems; Transition systems, Petri nets, process algebra properties; Safety, Liverness, Stability.", "CSL832": "Syntax and semantic foundations; Ranked algebras, homomorphisms, inital algebras, congruences. First order logic review: Soundness, completeness, compactness, Herbrand models and Herbrand's theorem, Horn-clauses and resolution. Natural deduction and the Sequent calculus. Normalization and cut elimination, Lambda-calculus and combinatory Logic; syntax and operational semantics (beta-eta equivalence), confluence and Church-Rosser property. Introduction to Type theory: The simply-typed lambda-calculus. Intuitionistic type theory. The Curry-Howard correspondence. Polymorphism, algorithms for polymorphic type inference. Girard and Reynolds' System F. Applications: type systems for programming languages; modules and functors; theorem proving executable specifications.", "CSL211": "Subsystems of a computer; Instructions and their formats; Assembly programming; Performance metrics; Performance comparison; Information representation; Integer and floating point arithmetic; Processor datapath design; Control unit design; Microprogramming; Performance improvement with pipelining; Memory organization - cache and virtual memory; input/output organization, interrupts and DMA.", "CSS799": "Research oriented activities or study of advanced subjects outside regular course offerings under the guidance of a faculty member. Prior to registration a detailed plan of the work should be submitted by the student, in concurrence with the faculty guide, to the Head of the Department for the approval.", "CSN110": "Overview of the Department's academic/research programmes; state of the computer industry in India and abroad.", "CSL730": "Parallel performance metrics, Models of parallel computation, Parallel computer organization, Parallel programming environments, Load distribution, Throughput, Latency and Latency hiding, Memory and Data Organizations, Inter-process communication, Distributed memory architecture, Interconnection network and routing, Shared memory architecture, Memory consistency, Non-uniform memory, Parallel Algorithm techniques: Searching, Sorting, Prefix operations, Pointer Jumping, Divide-and-Conquer, Partitioning, Pipelining, Accelerated Cascading, Symmetry Breaking, Synchronization (Locked/Lock-free).", "CSL433": "This course no longer exists. Please seeCSL333", "CSL633": "Overview: functions of Operating systems, layered architecture; basic concepts; interrupt architecture, system calls and notion of a process and threads; synchronization and protection issues; scheduling; memory managment including virtual memory management including virtual memory and paging techniques; i/o architecture and device mangements; file systems; distributed file systems; Case studies of Unix, Windows NT, Design and implementation of small operating systems.", "CSL632": "Evaluation and architecture of DB systems, DB models. The relational DB model, operations on the relational model. The database language SQL- constraints and triggers in SQL, system aspects of SQL, Object-oriented query languages, XML databases.", "CSL630": "Review of basic data structures and their realization in object oriented environment. The following topics will be covered with emphasis on formal analysis and design, Dynamic Data structures; 2-3 trees, Red-black trees, binary heaps, binomial and Fibonacci heaps, Skip lists, universal hashing. Data structures for maintaing ranges, intervals and disjoint sets with applications. Basic algorithmic techniques like dynamic programming and divide- and-conquer, Sorting algorithms with analysis, integer sorting, selection, Graph algorithms like DFS with applications, MSTs and shortest paths.", "CSL812": "Embedded systems and system-level design, models of computation, specification languages, hardware/software codesign, system partitioning, application specific processors and memory, low power design.", "CSL728": "Compilers and translators; lexical and syntactic analysis, top-down and bottom up parsing techniques; internal form of source programs; semantic analysis, symbol tables, error detection and recovery, code generation and optimization. Type checking and static analysis. Algorithms and implementation techniques for type-checking code generation and optimization. Students will design and implement translators, static analysis, typechecking and optimization.", "CSL332": "The world of Database Systems. The E-R Model, The three database models, Representation and Evaluation of Relationship. The Relational Database Model, Functional Dependencies, Multi-valued and join Dependency, Normalizion Theory, Concurency Control in Relational Databases. Object-oriented Data Models.", "CSL333": "Problem solving, search techniques, control strategies, game playing (minimax), reasoning, knowedge representation through predicate logic, rule-based systems, semantic nets, frames, conceptual dependency formalism. Planning. Handling uncertainty: Bayesian Networks, Dempster-Shafer theory, certainty factors, Fuzzy logic, Learning through Neural nets -- Back propagation, radial basis functions, Neural computational models - Hopfield Nets, Bolzman machines. PROLOG programming", "CSL374": "Fundamentals of Digital Communications, including channel capacity, error rates, multiplexing, framing and synchronization. Broadcast network and multi-access protocols, including CSMA/CD. Data link protocols, network protocols including routing and congestion control, IP protocol. Transport protocol including TCP. Network application services and protocols including email, www, DNS. Network security and management.", "CSV883": "Special module that focuses on special topics and research problems of importance in this area.", "CSL862": "Special topic that focuses on state of the art and research problems of importance in this area.", "CSL863": "Under this topic one of the following areas will be covered: Design and Analysis of Sequential and Parallel Algorithms. Complexity issues, Trends in Computer Science Logic, Quantum Computing and Bioinformatics. Theory of computability, Formal Languages, Semantics and Verification issues.", "CSL860": "The course will focus on research issues in areas like parallel comutation models, parallel algorithms, Parallel Computer architectures and interconnection networks, Shared memory parallel architectures and programming with OpenMP and Ptheards, Distributed memory, message-passing parallel architecutres and programming, portable parallel message-passing programming using MPI. This will also include design and implementation of parallel numerical and non-numerical algorithms for scientific, engineering and commercial applications. Performance evaluation and benchmarking high-performance computers.", "CSL861": "Under this topic one of the following areas will be convered: Fault Detection and Diagnosability. Special Architectures, Design Automation issues. Computer Arithmetic, VLSI.", "CSL866": "The course will focus on specialized topics in areas like Computational Topology, Manufacturing processes, Quantum Computing, Computational Biology, Randomized algorithms and other research intensive topics.", "CSL867": "Research level issues and problems of current interest in the area.", "CSL864": "Under this topic one of the following areas will be covered: issues in Expert Systems, Theorem Proving, Natural Language Processing. AI in Speech and Computer Vision, Higher Order Logic Programming, Machine Learning, Advanced Neural Networks.", "CSL865": "Special topic that focuses on special topics and research problems of importance in this area.", "CSL718": "Classification of parallel computing structures, instruction level parallelism - static and dynamic pipelining, improving branch performance, superscalar and VLIW processors; High performance memory system; Shared memory multiprocessors and cache coherence; Multiprocessor interconnection networks; Performance modelling; issues in programming multiprocessors; Data parallel architectures.", "CSL719": "After a basic overview of the VLSI design flow, hardware modelling principles and hardware description using the VHDL language are covered. This is followed by a study of the major steps involved in behavioural synthesis; scheduling, allocation and binding. This is followed by register-transfer level synthesis, which includes retiming and Finite State Machine encoding. Logic synthesis, consisting of combinational logic optimization and technology mapping is covered next. Popular chip architectures - standard cells and FPGA are introduced. The course concludes with a brief overview of layout synthesis topics: placement and routing.", "CSL868": "The contents would include specific advanced atopics in Database Management Systems in whcih research is currently going on in the department. These would be announced every time the course is offered.", "CSL869": "The course will focus on research issues in concurrent, distributed and mobile computations. Some of the following topics will be covered; Models of Concurrent, Distributed and Mobile computation, Process calculi, Event Structures, Petri Nets and labelled transition systems. Implementations of concurrent and mobile, distributed programming languages, Logics and specification models for concurrent and mobile systems. Verification techniques and algorithms for model checking. Type systems for concurrent/mobile programming languages. Applications of the above models and techniques.", "CSD750": "A semester-long project usually involving design and implementation under the guidance of any faculty member approved by the department, is undertaken by one or two students.", "CSD853": "This project spans also the courseCSD854. Hence it is expected that the problem specification and the milestones to be achieved in solving the problem are clearly specified.", "CSD852": "The students who work on a project are expected to work towards the goals and milestones set inCSD851. At the end there would be a demonstration of the solution and possible future work on the same problem. A dissertation outlining the entire problem, including a survey of literature and the various results obtained along with their solution is expected to be produced by each student.", "CSD851": "This project spans also the courseCSD852. Hence it is expected that the problem specification and the milestones to be achieved in solving the problem are clearly specified.", "CSD854": "The students who work on a project are expected to work towards the goals and milestones set inCSD853. At the end there would be a demonstration of the solution and possible future work on the same problem. A dissertation outlining the entire problem, including a survery of literature and the various results obtained along with their soultions is expected to be produced by each students.", "CSC410": "The students will deliver talks on their experience during the 50 working days of practical training and topics of current interest in the computer science and engineering field. These would include technology, research as well as standards issues."};
